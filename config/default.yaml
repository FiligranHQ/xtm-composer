manager:
  id: default-manager-id # Manager id is mandatory
  name: Filigran connector manager
  execute_schedule: 10 # Check every 10 secs
  ping_alive_schedule: 60 # Ping every 60 seconds
  
  # RSA Private Key Configuration (one of the following is required):
  # Option 1: Direct key content (use environment variable MANAGER__CREDENTIALS_KEY in production)
  # credentials_key: |-
  #   -----BEGIN RSA PRIVATE KEY-----
  #   YOUR 4096 BIT RSA KEY HERE
  #   -----END RSA PRIVATE KEY-----
  
  # Option 2: Path to key file (recommended, use environment variable MANAGER__CREDENTIALS_KEY_FILEPATH)
  # credentials_key_filepath: /path/to/private_key.pem
  
  # Note: If both are set, filepath takes priority with a warning
  
  logger:
    level: info
    format: json
    directory: true
    console: true

opencti:
  enable: true
  url: http://host.docker.internal:4000
  token: ChangeMe
  unsecured_certificate: false
  with_proxy: false
  logs_schedule: 10 # report logs every 10 secondes maximum
  daemon:
    selector: kubernetes
    kubernetes:
      # Image pull policy for K8s containers
      # Valid values: Always, IfNotPresent, Never  
      # Default: IfNotPresent
      # Environment variable: OPENCTI__DAEMON__KUBERNETES__IMAGE_PULL_POLICY
      image_pull_policy: IfNotPresent
      base_deployment:
    portainer:
      api: https://host.docker.internal:9443
      api_key: ChangeMe
      env_id: 3
      env_type: docker
      api_version: v1.41

openbas:
  enable: false
  url: http://host.docker.internal:4000
  token: ChangeMe
  unsecured_certificate: false
  with_proxy: false
  logs_schedule: 10 # report logs every 10 secondes maximum
  daemon:
    selector: portainer
    kubernetes:
      # Image pull policy for K8s containers
      # Valid values: Always, IfNotPresent, Never  
      # Default: IfNotPresent
      # Environment variable: OPENBAS__DAEMON__KUBERNETES__IMAGE_PULL_POLICY
      image_pull_policy: IfNotPresent
      base_deployment:
    portainer:
      api: https://localhost:9443
      api_key: ChangeMe
      api_version: v1.41
      env_id: 3
      env_type: docker
      stack: opencti-dev
      network_mode: opencti-dev_default
